#version 300 es

//uniform vec3 light_pos_worldspace;

uniform mat4 model_mat;
uniform mat4 view_mat;
uniform mat4 projection_mat;

in vec3 position_modelspace;
in vec3 diffuse_color;
in vec3 normal_modelspace;


out vec3 frag_pos;
out vec3 frag_normal;
out vec3 frag_vert_color;
out float frag_shininess;
out vec3 frag_specular;
out mat4 mv_mat;



void main() {
    vec3 light_pos_worldspace = vec3(0.f, 0.f, 10.f);


    vec4 pos_cameraspace = view_mat * model_mat * vec4(position_modelspace, 1.0f);
    gl_Position = projection_mat * pos_cameraspace;
    frag_pos = pos_cameraspace.xyz;
    frag_normal = (view_mat * model_mat * vec4(normal_modelspace, 0.0f)).xyz;
    frag_vert_color = diffuse_color/255.f;
    frag_shininess = 5.0f;
    frag_specular = vec3(.1f, .1f, .1f);
    mv_mat = view_mat * model_mat;
}
